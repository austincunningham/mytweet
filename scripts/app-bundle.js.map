{"version":3,"sources":["app.js","environment.js","home.js","main.js","resources/index.js","services/async-http-client.js","services/fixtures.js","services/messages.js","services/mytweet-service.js","viewmodels/findusertweets/findusertweets.js","viewmodels/following/following.js","viewmodels/login/login.js","viewmodels/logout/logout.js","viewmodels/mytweets/mytweets.js","viewmodels/report/report.js","viewmodels/settings/settings.js","viewmodels/signup/signup.js","viewmodels/tweet/tweet.js","C:/Users/austin/repo/mytweet-webdev-spa/src/app.html","C:/Users/austin/repo/mytweet-webdev-spa/src/home.html","C:/Users/austin/repo/mytweet-webdev-spa/src/nav-bar.html","C:/Users/austin/repo/mytweet-webdev-spa/src/viewmodels/findusertweets/findusertweets.html","C:/Users/austin/repo/mytweet-webdev-spa/src/viewmodels/following/following.html","C:/Users/austin/repo/mytweet-webdev-spa/src/viewmodels/login/login.html","C:/Users/austin/repo/mytweet-webdev-spa/src/viewmodels/logout/logout.html","C:/Users/austin/repo/mytweet-webdev-spa/src/viewmodels/mytweets/mytweets.html","C:/Users/austin/repo/mytweet-webdev-spa/src/viewmodels/report/report.html","C:/Users/austin/repo/mytweet-webdev-spa/src/viewmodels/settings/settings.html","C:/Users/austin/repo/mytweet-webdev-spa/src/viewmodels/signup/signup.html","C:/Users/austin/repo/mytweet-webdev-spa/src/viewmodels/tweet/tweet.html"],"names":["App","mts","au","ea","subscribe","msg","status","success","setRoot","then","router","navigateToRoute","configureRouter","config","map","route","name","moduleId","nav","title","mapUnknownRoutes","attached","isAuthenticated","debug","testing","Home","aurelia","configure","Promise","longStackTraces","warnings","wForgottenReturn","use","standardConfiguration","feature","developmentLogging","plugin","start","AsyncHttpClient","httpClient","fixtures","http","withBaseUrl","baseUrl","get","url","post","obj","delete","authenticate","user","response","content","localStorage","mytweet","JSON","stringify","configuration","withHeader","token","publish","catch","message","clearAuthentication","authenticated","auth","parse","Fixtures","LoginStatus","email","FollowingStatus","TweetStatus","DeleteStatus","MyTweetService","data","ac","users","tweets","undefined","mytweets","alltweets","register","firstName","lastName","password","newUser","getUsers","login","submitTweet","date","number","tweet","id","Number","Math","floor","random","i","length","push","_id","getTweets","console","log","logout","res","findUser","Date","settings","editedUser","follow","unfollow","deleteTweet","deleteAllTweets","j","FindUserTweets","myTweetService","Following","x","following","tweeter","sort","Comparator","a","b","Login","prompt","e","Logout","MyTweet","Report","Settings","c","Signup","showSignup","statusMessage"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject, Aurelia} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './services/messages';\nimport {TweetStatus} from './services/messages';\nimport {DeleteStatus} from './services/messages';\nimport {FollowingStatus} from './services/messages';\nimport MyTweetService from './services/mytweet-service';\n\n@inject(MyTweetService, Aurelia, EventAggregator)\nexport class App {\n\n  constructor(mts, au, ea) {\n    this.au = au;\n    this.mts = mts;\n    ea.subscribe(LoginStatus, msg => {\n      if (msg.status.success === true) {\n        au.setRoot('home').then(() => {\n          this.router.navigateToRoute('tweet');\n        });\n      } else {\n        au.setRoot('app').then(() => {\n          this.router.navigateToRoute('login');\n        });\n      }\n    });\n    ea.subscribe(FollowingStatus, msg =>{\n      if (msg.status.success === true) {\n        au.setRoot('home').then(() => {\n          this.router.navigateToRoute('following');\n        });\n      } else {\n        au.setRoot('home').then(() => {\n          this.router.navigateToRoute('report');\n        });\n      }\n    });\n\n    ea.subscribe(TweetStatus, msg => {\n      if (msg.status.success === true) {\n        au.setRoot('home').then(() => {\n          this.router.navigateToRoute('report');\n        });\n      }\n    });\n\n    ea.subscribe(DeleteStatus, msg => {\n      if (msg.status.success === true) {\n        au.setRoot('home').then(() => {\n          this.router.navigateToRoute('tweet');\n        });\n      }\n    });\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'login'], name: 'login', moduleId: 'viewmodels/login/login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'viewmodels/signup/signup', nav: true, title: 'Signup' }\n    ]);\n\n    config.mapUnknownRoutes(instruction => {\n      return 'login';\n    });\n\n    this.router = router;\n  }\n\n  attached() {\n    if (this.mts.isAuthenticated()) {\n      this.au.setRoot('home').then(() => {\n        this.router.navigateToRoute('tweet');\n      });\n    }\n  }\n}\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","/**\r\n * Created by austin on 29/12/2016.\r\n */\r\nimport { inject, Aurelia } from 'aurelia-framework';\r\n\r\n@inject(Aurelia)\r\nexport class Home {\r\n\r\n  constructor(au) {\r\n    this.aurelia = au;\r\n  }\r\n\r\n  configureRouter(config, router) {\r\n    config.map([\r\n      { route: ['', 'home'], name: 'tweet', moduleId: 'viewmodels/tweet/tweet', nav: true, title: 'Tweet' },\r\n      { route: 'report', name: 'report', moduleId: 'viewmodels/report/report', nav: true, title: 'All Tweets' },\r\n      { route: 'mytweets', name: 'mytweets', moduleId: 'viewmodels/mytweets/mytweets', nav: true, title: 'My Tweets' },\r\n      { route: 'findusertweets', name: 'findusertweets', moduleId: 'viewmodels/findusertweets/findusertweets', nav: true, title: 'Find User Tweets' },\r\n      { route: 'following', name: 'following', moduleId: 'viewmodels/following/following', nav: true, title: 'Following' },\r\n      { route: 'settings', name: 'settings', moduleId: 'viewmodels/settings/settings', nav: true, title: 'Settings' },\r\n      { route: 'logout', name: 'logout', moduleId: 'viewmodels/logout/logout', nav: true, title: 'Logout' }\r\n    ]);\r\n\r\n    config.mapUnknownRoutes(instruction => {\r\n      return 'dashboard';\r\n    });\r\n\r\n    this.router = router;\r\n  }\r\n}\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  longStackTraces: environment.debug,\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","/**\r\n * Created by austin on 29/12/2016.\r\n */\r\nimport {inject} from 'aurelia-framework';\r\nimport {HttpClient} from 'aurelia-http-client';\r\nimport Fixtures from './fixtures';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {LoginStatus} from './messages';\r\n\r\n@inject(HttpClient, Fixtures, EventAggregator )\r\nexport default class AsyncHttpClient {\r\n\r\n  constructor(httpClient, fixtures, ea) {\r\n    this.http = httpClient;\r\n    this.http.configure(http => {\r\n      http.withBaseUrl(fixtures.baseUrl);\r\n    });\r\n    this.ea = ea;\r\n  }\r\n\r\n  get(url) {\r\n    return this.http.get(url);\r\n  }\r\n\r\n  post(url, obj) {\r\n    return this.http.post(url, obj);\r\n  }\r\n\r\n  delete(url) {\r\n    return this.http.delete(url);\r\n  }\r\n\r\n  authenticate(url, user) {\r\n    this.http.post(url, user).then(response => {\r\n      const status = response.content;\r\n      if (status.success) {\r\n        localStorage.mytweet = JSON.stringify(response.content);\r\n        this.http.configure(configuration => {\r\n          configuration.withHeader('Authorization', 'bearer ' + response.content.token);\r\n        });\r\n      }\r\n      this.ea.publish(new LoginStatus(status));\r\n    }).catch(error => {\r\n      const status = {\r\n        success: false,\r\n        message: 'service not available'\r\n      };\r\n      this.ea.publish(new LoginStatus(status));\r\n    });\r\n  }\r\n\r\n  clearAuthentication() {\r\n    localStorage.mytweet = null;\r\n    this.http.configure(configuration => {\r\n      configuration.withHeader('Authorization', '');\r\n    });\r\n  }\r\n\r\n  isAuthenticated() {\r\n    let authenticated = false;\r\n    if (localStorage.mytweet !== 'null') {\r\n      authenticated = true;\r\n      this.http.configure(http => {\r\n        const auth = JSON.parse(localStorage.mytweet);\r\n        http.withHeader('Authorization', 'bearer ' + auth.token);\r\n      });\r\n    }\r\n    return authenticated;\r\n  }\r\n}\r\n","/**\n * Created by austin on 28/12/2016.\n */\nexport default class Fixtures {\n  //baseUrl = 'http://localhost:4000';\n  baseUrl = 'http://35.160.157.123:4000';\n}\n","/**\r\n * Created by austin on 29/12/2016.\r\n */\r\n\r\n\r\nexport class LoginStatus {\r\n  constructor(status, email) {\r\n    this.status = status;\r\n    this.email = email;\r\n  }\r\n}\r\n\r\nexport class FollowingStatus {\r\n  constructor(status, user) {\r\n    this.status = status;\r\n    this.user = user;\r\n  }\r\n}\r\n\r\nexport class TweetStatus {\r\n  constructor(status) {\r\n    this.status = status;\r\n  }\r\n}\r\n\r\nexport class DeleteStatus {\r\n  constructor(status, user) {\r\n    this.status = status;\r\n    this.user = user;\r\n  }\r\n}\r\n","/**\r\n * Created by austin on 28/12/2016.\r\n */\r\nimport {inject} from 'aurelia-framework';\r\nimport Fixtures from './fixtures';\r\nimport {LoginStatus} from './messages';\r\nimport {DeleteStatus} from './messages';\r\nimport {FollowingStatus} from './messages';\r\nimport {TweetStatus} from './messages';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport AsyncHttpClient from './async-http-client';\r\n\r\n@inject(Fixtures, EventAggregator, AsyncHttpClient)\r\nexport default class MyTweetService {\r\n  users = [];\r\n  tweets = [];\r\n  user = undefined;\r\n  mytweets = [];\r\n  alltweets = [];\r\n  email = '';\r\n\r\n  constructor(data, ea, ac) {\r\n    //this.users = data.users;\r\n    //this.tweets = data.tweets;\r\n    this.ea = ea;\r\n    this.ac = ac;\r\n/*    this.getTweets();\r\n    this.getUsers();*/\r\n  }\r\n\r\n  register(firstName, lastName, email, password) {\r\n    let newUser = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: email,\r\n      password: password\r\n    };\r\n    this.users[email] = newUser;\r\n    this.ac.post('/api/users/register', newUser).then(res => {\r\n      this.getUsers();\r\n    });\r\n    //this.users.push(user);\r\n    //console.log('registered ' + newUser.firstName + ' ' + newUser.lastName);\r\n  }\r\n\r\n  login(email, password) {\r\n    const user = {\r\n      'email': email,\r\n      'password': password\r\n    };\r\n    this.ac.authenticate('/api/users/login', user);\r\n    this.user = user;\r\n  }\r\n\r\n  submitTweet(message, date, email, number) {\r\n    let tweet = {\r\n      message: message,\r\n      name: email,\r\n      id: number,\r\n      date: date\r\n    };\r\n    const status = {\r\n      success: false,\r\n      message: 'Message length greater than 140 characters'\r\n    };\r\n\r\n    tweet.date = Number(date);\r\n    tweet.id = Math.floor(Math.random() * 1000000000);\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      if (this.user.email === this.users[i].email && tweet.message.length < 140 ) {\r\n        status.success = true;\r\n        status.message = '';\r\n        this.tweets.push(tweet);\r\n        this.ac.post('/api/tweet/' + this.users[i]._id, tweet).then(res => {\r\n          this.getTweets();\r\n        });\r\n      }\r\n    }\r\n    console.log('submitted tweet ' + tweet.message + ' from ' + tweet.name);\r\n    this.ea.publish(new TweetStatus(status));\r\n  }\r\n\r\n  logout() {\r\n    const status = {\r\n      success: false,\r\n      message: ''\r\n    };\r\n    this.ac.clearAuthentication();\r\n    this.ea.publish(new LoginStatus(status));\r\n  }\r\n\r\n  getTweets() {\r\n    this.ac.get('/api/tweets').then(res => {\r\n      this.tweets = res.content;\r\n    });\r\n  }\r\n\r\n  getUsers() {\r\n    this.ac.get('/api/users').then(res => {\r\n      this.users = res.content;\r\n    });\r\n  }\r\n\r\n  findUser(email) {\r\n    this.email = email;\r\n    for (let i = 0; i < this.tweets.length; i++) {\r\n      if (this.tweets[i].name === this.email) {\r\n        this.tweets[i].date = new Date(this.tweets[i].date);\r\n        this.mytweets.push(this.tweets[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  settings(firstName, lastName, email, password, _id) {\r\n    let editedUser = {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: email,\r\n      password: password,\r\n      _id: _id\r\n    };\r\n\r\n    const status = {\r\n      success: false,\r\n      message: ''\r\n    };\r\n\r\n    this.ac.post('/api/users/settings', editedUser).then(res => {\r\n      this.getUsers();\r\n      status.success = true;\r\n      status.message = 'User updated';\r\n      this.ea.publish(new LoginStatus(status));\r\n    });\r\n  }\r\n\r\n  follow(id) {\r\n    const status = {\r\n      success: false,\r\n      message: 'Following Attempt Failed'\r\n    };\r\n    this.ac.post('/api/users/follow/' + id, this.user).then(res => {\r\n      this.getUsers();\r\n      this.alltweets = [];\r\n      for (let i = 0; i < this.users.length; i++) {\r\n        if (this.users[i].email === this.user.email) {\r\n          this.user = this.users[i];\r\n          status.success = true;\r\n          status.message = 'following';\r\n          this.ea.publish(new FollowingStatus(status, this.user));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  unfollow(id) {\r\n    const status = {\r\n      success: false,\r\n      message: 'Login Attempt Failed'\r\n    };\r\n    this.ac.post('/api/users/unfollow/' + id, this.user).then(res =>{\r\n      this.getUsers();\r\n      this.alltweets = [];\r\n      for (let i = 0; i < this.users.length; i++) {\r\n        if (this.users[i].email === this.user.email) {\r\n          this.user = this.users[i];\r\n          status.success = false;\r\n          status.message = 'logged in';\r\n          this.ea.publish(new FollowingStatus(status, this.user));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.ac.isAuthenticated();\r\n  }\r\n\r\n\r\n  deleteTweet(id) {\r\n    const status = {\r\n      success: false,\r\n      message: 'Delete Attempt Failed'\r\n    };\r\n\r\n    this.ac.delete('/api/tweets/' + id, this.user).then(res =>{\r\n      this.getUsers();\r\n      this.getTweets();\r\n      for (let i = 0; i < this.users.length; i++) {\r\n        if (this.users[i].email === this.user.email) {\r\n          this.user = this.users[i];\r\n          status.success = true;\r\n          status.message = 'Tweet deleted';\r\n          this.ea.publish(new DeleteStatus(status, this.user));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  deleteAllTweets(user) {\r\n    const status = {\r\n      success: false,\r\n      message: 'Delete Attempt Failed'\r\n    };\r\n    for (let j = 0; j < this.tweets.length; j++) {\r\n      if (this.tweets[j].name === this.user.email) {\r\n        this.ac.delete('/api/tweets/' + this.tweets[j]._id, this.user).then(res => {\r\n          this.getUsers();\r\n          this.getTweets();\r\n          for (let i = 0; i < this.users.length; i++) {\r\n            if (this.users[i].email === this.user.email) {\r\n              this.user = this.users[i];\r\n              status.success = true;\r\n              status.message = 'Tweet deleted';\r\n              this.ea.publish(new DeleteStatus(status, this.user));\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Created by austin on 04/01/2017.\r\n */\r\n/**\r\n * Created by austin on 03/01/2017.\r\n */\r\nimport {inject} from 'aurelia-framework';\r\nimport MyTweetService from '../../services/mytweet-service';\r\n\r\n\r\n@inject(MyTweetService)\r\nexport class FindUserTweets {\r\n  tweets = [];\r\n  mytweets = [];\r\n  email = '';\r\n\r\n\r\n  constructor(mts) {\r\n    this.myTweetService = mts;\r\n    mts.getTweets();\r\n    mts.getUsers();\r\n    mts.mytweets = [];\r\n    this.mytweets = this.myTweetService.mytweets;\r\n  }\r\n\r\n  findUser() {\r\n    console.log(`email = ${this.email}`);\r\n    this.myTweetService.findUser(this.email);\r\n  }\r\n}\r\n","/**\r\n * Created by austin on 05/01/2017.\r\n */\r\nimport {inject} from 'aurelia-framework';\r\nimport MyTweetService from '../../services/mytweet-service';\r\n\r\n\r\n@inject(MyTweetService)\r\nexport class Following {\r\n  tweets = [];\r\n  alltweets = [];\r\n\r\n  constructor(mts) {\r\n    this.myTweetService = mts;\r\n    mts.getTweets();\r\n    mts.getUsers();\r\n    mts.alltweets = [];\r\n    this.user = mts.user;\r\n    this.users = mts.users;\r\n    for (let x = 0; x < this.users.length; x++) {\r\n      if ( this.users[x].email === this.user.email) {\r\n        this.user = this.users[x];\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < mts.tweets.length; i++) {\r\n      mts.tweets[i].date = new Date(mts.tweets[i].date);\r\n      for (let j = 0; j < this.user.following.length; j++) {\r\n        console.log(this.user.following[j] + ' ' + mts.tweets[i].tweeter);\r\n        if (this.user.following[j] === mts.tweets[i].tweeter) {\r\n          console.log('push');\r\n          mts.alltweets.push(mts.tweets[i]);\r\n        }\r\n      }\r\n    }\r\n    mts.alltweets = mts.alltweets.sort(Comparator);\r\n\r\n    function Comparator(a, b) {\r\n      if (a.date < b.date) return -1;\r\n      if (a.date > b.date) return 1;\r\n      return 0;\r\n    }\r\n    this.alltweets = mts.alltweets;\r\n    this.alltweets = this.myTweetService.alltweets;\r\n  }\r\n\r\n  unfollow(id) {\r\n    this.myTweetService.unfollow(id);\r\n  }\r\n}\r\n","/**\n * Created by austin on 29/12/2016.\n */\n\nimport {inject} from 'aurelia-framework';\nimport MyTweetService from '../../services/mytweet-service';\n\n\n@inject(MyTweetService)\nexport class Login {\n\n  email = 'lisa@simpson.com';\n  password = 'secret';\n\n  constructor(mts) {\n    this.myTweetService = mts;\n    this.prompt = '';\n  }\n\n  login(e) {\n    console.log(`Trying to log in ${this.email}`);\n    this.myTweetService.login(this.email, this.password);\n  }\n}\n","/**\r\n * Created by austin on 29/12/2016.\r\n */\r\nimport {inject} from 'aurelia-framework';\r\nimport MyTweetService from '../../services/mytweet-service';\r\n\r\n\r\n@inject(MyTweetService)\r\nexport class Logout {\r\n\r\n  constructor(myTweetService) {\r\n    this.myTweetService = myTweetService;\r\n  }\r\n\r\n  logout() {\r\n    console.log('logging out');\r\n    this.myTweetService.logout();\r\n  }\r\n}\r\n","/**\r\n * Created by austin on 03/01/2017.\r\n */\r\nimport {inject} from 'aurelia-framework';\r\nimport MyTweetService from '../../services/mytweet-service';\r\n\r\n\r\n@inject(MyTweetService)\r\nexport class MyTweet {\r\n  tweets = [];\r\n  mytweets = [];\r\n\r\n  constructor(mts) {\r\n    this.myTweetService = mts;\r\n    mts.getTweets();\r\n    mts.getUsers();\r\n    this.user = mts.user;\r\n    mts.mytweets.length = 0;\r\n    for (let i = 0; i < mts.tweets.length; i++) {\r\n      if (mts.tweets[i].name === this.user.email) {\r\n        mts.tweets[i].date = new Date(mts.tweets[i].date);\r\n        mts.mytweets.push(mts.tweets[i]);\r\n      }\r\n    }\r\n    this.mytweets = mts.mytweets;\r\n    this.mytweets = this.myTweetService.mytweets;\r\n  }\r\n\r\n  deleteTweet(id) {\r\n    this.myTweetService.deleteTweet(id);\r\n  }\r\n\r\n  deleteAllTweets(){\r\n    this.myTweetService.deleteAllTweets(this.user);\r\n  }\r\n}\r\n","/**\n * Created by austin on 28/12/2016.\n */\nimport {inject} from 'aurelia-framework';\nimport MyTweetService from '../../services/mytweet-service';\n\n\n@inject(MyTweetService)\nexport class Report {\n  tweets = [];\n  alltweets = [];\n\n  constructor(mts) {\n    this.myTweetService = mts;\n    mts.getTweets();\n    mts.getUsers();\n    mts.alltweets = [];\n    for (let i = 0; i < mts.tweets.length; i++) {\n        mts.tweets[i].date = new Date(mts.tweets[i].date);\n        mts.alltweets.push(mts.tweets[i]);\n    }\n    this.users = mts.users;\n    this.alltweets = mts.alltweets;\n    this.alltweets = this.myTweetService.alltweets;\n  }\n\n  follow(id) {\n    this.myTweetService.follow(id);\n  }\n}\n","/**\r\n * Created by austin on 04/01/2017.\r\n */\r\nimport {inject} from 'aurelia-framework';\r\nimport MyTweetService from '../../services/mytweet-service';\r\n\r\n@inject(MyTweetService)\r\nexport class Settings {\r\n  user = this.user;\r\n  firstName = '';\r\n  lastName = '';\r\n  email = '';\r\n  password = '';\r\n  _id = '';\r\n\r\n  constructor(mts) {\r\n    this.myTweetService = mts;\r\n    mts.getTweets();\r\n    mts.getUsers();\r\n    this.user = mts.user;\r\n    for (let c of mts.users) {\r\n      if (c.email === this.user.email) {\r\n        this.user = c;\r\n      }\r\n    }\r\n    this.firstName = this.user.firstName;\r\n    this.lastName = this.user.lastName;\r\n    this.email = this.user.email;\r\n    this.password = '*****';\r\n    this._id = this.user._id;\r\n  }\r\n\r\n  settings(e) {\r\n    this.myTweetService.settings(this.firstName, this.lastName, this.email, this.password, this._id);\r\n  }\r\n}\r\n","/**\r\n * Created by austin on 29/12/2016.\r\n */\r\nimport {inject} from 'aurelia-framework';\r\nimport MyTweetService from '../../services/mytweet-service';\r\n\r\n@inject(MyTweetService)\r\nexport class Signup {\r\n\r\n  firstName = 'Marge';\r\n  lastName = 'Simpson';\r\n  email = 'marge@simpson.com';\r\n  password = 'secret';\r\n\r\n  constructor(mts) {\r\n    this.myTweetService = mts;\r\n  }\r\n\r\n  register(e) {\r\n    this.showSignup = false;\r\n    this.myTweetService.register(this.firstName, this.lastName, this.email, this.password);\r\n    this.myTweetService.login(this.email, this.password);\r\n  }\r\n}\r\n","/**\r\n * Created by austin on 28/12/2016.\r\n */\r\nimport {inject} from 'aurelia-framework';\r\nimport MyTweetService from '../../services/mytweet-service';\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {TweetStatus} from '../../services/messages';\r\n\r\n@inject( MyTweetService, EventAggregator)\r\nexport class tweet {\r\n\r\n  message = '';\r\n  date = new Date();\r\n  users = [];\r\n  tweets = [];\r\n  statusMessage = '';\r\n\r\n  constructor(mts, ea) {\r\n    this.myTweetService = mts;\r\n    mts.getTweets();\r\n    mts.getUsers();\r\n    this.users = mts.users;\r\n    this.tweets = mts.tweets;\r\n    this.user = mts.user;\r\n    this.ea = ea;\r\n    this.ea.subscribe(TweetStatus, msg => {\r\n      this.statusMessage = msg.status.message;\r\n    });\r\n  }\r\n\r\n  submitTweet() {\r\n    console.log(`Message = ${this.message}`);\r\n    let date = new Date();\r\n    //console.log('Do I see an email address ' + this.user.email);\r\n    this.myTweetService.submitTweet(this.message, this.date, this.user.email);\r\n  }\r\n};\r\n\r\n\r\n",null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":"../src"}